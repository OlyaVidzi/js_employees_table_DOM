{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCAA,I,EAAM,EAAO,SAAS,aAAa,CAAC,QAC9B,EAAU,SAAS,gBAAgB,CAAC,YACpC,EAAQ,SAAS,aAAa,CAAC,SAC/B,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAW,SAAS,gBAAgB,CAAC,c,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAG3C,EAAQ,OAAO,CAAC,SAAC,CAAA,CAAQ,CAAzB,EACE,EAAO,gBAAgB,CAAC,QAAS,WAC/B,IAAM,EAAQ,EAAO,YAAY,CAAC,SAElC,EAAK,IAAI,CAAC,SAAC,CAAA,CAAG,CAAd,EACE,IAAM,EAAQ,EAAE,QAAQ,CAAC,EAAM,CAAC,WAAW,CAAC,IAAI,GAC1C,EAAQ,EAAE,QAAQ,CAAC,EAAM,CAAC,WAAW,CAAC,IAAI,GAE5C,EAAa,QAcjB,CAPE,EANsB,AAAU,IAAV,EAMT,AAHG,WAAW,EAAM,OAAO,CAAC,YAAa,KACtC,WAAW,EAAM,OAAO,CAAC,YAAa,KAG7C,AAAC,MAAM,IAAW,MAAM,GAGpB,EAAM,aAAa,CAAC,GAFpB,EAAQ,EAKnB,AAAU,QAAV,GACK,CAAC,EAED,CAEX,GAEA,EAAQ,OAAO,CAAC,SAAC,CAAjB,EAA0B,OAAA,EAAK,eAAe,CAAC,Q,GAC/C,EAAO,YAAY,CAAC,QAAS,AAAU,QAAV,EAAkB,MAAQ,OAEvD,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAM,WAAW,CAAC,E,EAC1C,EACF,GAEA,EAAK,OAAO,CAAC,SAAC,CAAd,EACE,EAAI,gBAAgB,CAAC,QAAS,WACxB,EAAI,SAAS,CAAC,QAAQ,CAAC,UACzB,EAAK,OAAO,CAAC,SAAC,CADhB,EAEI,EAAK,S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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar body = document.querySelector(\"body\");\nvar headers = document.querySelectorAll(\"thead th\");\nvar tbody = document.querySelector(\"tbody\");\nvar rows = _to_consumable_array(document.querySelectorAll(\"tbody tr\"));\n// sorting table and selecting row\nheaders.forEach(function(header, index) {\n    header.addEventListener(\"click\", function() {\n        var order = header.getAttribute(\"order\");\n        rows.sort(function(a, b) {\n            var cellA = a.children[index].textContent.trim();\n            var cellB = b.children[index].textContent.trim();\n            var comparison = 0;\n            var isNumericColumn = index === 4;\n            if (isNumericColumn) {\n                var salaryA = parseFloat(cellA.replace(/[^0-9.-]/g, \"\"));\n                var salaryB = parseFloat(cellB.replace(/[^0-9.-]/g, \"\"));\n                comparison = salaryA - salaryB;\n            } else if (!isNaN(cellA) && !isNaN(cellB)) comparison = cellA - cellB;\n            else comparison = cellA.localeCompare(cellB);\n            if (order === \"asc\") return -comparison;\n            else return comparison;\n        });\n        headers.forEach(function(cell) {\n            return cell.removeAttribute(\"order\");\n        });\n        header.setAttribute(\"order\", order === \"asc\" ? \"dsc\" : \"asc\");\n        rows.forEach(function(row) {\n            return tbody.appendChild(row);\n        });\n    });\n});\nrows.forEach(function(row) {\n    row.addEventListener(\"click\", function() {\n        if (row.classList.contains(\"active\")) rows.forEach(function(item) {\n            item.classList.remove(\"active\");\n        });\n        else {\n            rows.forEach(function(item) {\n                item.classList.remove(\"active\");\n            });\n            row.classList.add(\"active\");\n        }\n    });\n});\n// creating and appending form\nvar form = document.createElement(\"form\");\nform.classList.add(\"new-employee-form\");\nvar labelName = document.createElement(\"label\");\nvar labelPosition = document.createElement(\"label\");\nvar labelOffice = document.createElement(\"label\");\nvar labelAge = document.createElement(\"label\");\nvar labelSalary = document.createElement(\"label\");\nlabelName.textContent = \"Name: \";\nlabelPosition.textContent = \"Position: \";\nlabelOffice.textContent = \"Office: \";\nlabelAge.textContent = \"Age: \";\nlabelSalary.textContent = \"Salary: \";\nvar inputName = document.createElement(\"input\");\ninputName.setAttribute(\"name\", \"name\");\ninputName.setAttribute(\"type\", \"text\");\ninputName.setAttribute(\"data-qa\", \"name\");\nvar inputPosition = document.createElement(\"input\");\ninputPosition.setAttribute(\"name\", \"position\");\ninputPosition.setAttribute(\"type\", \"text\");\ninputPosition.setAttribute(\"data-qa\", \"position\");\nvar select = document.createElement(\"select\");\nselect.setAttribute(\"data-qa\", \"office\");\nvar selectOptions = [\n    \"Tokyo\",\n    \"Singapore\",\n    \"London\",\n    \"New York\",\n    \"Edinburgh\",\n    \"San Francisco\"\n];\nselectOptions.forEach(function(optionName) {\n    var option = document.createElement(\"option\");\n    option.textContent = optionName;\n    option.setAttribute(\"value\", optionName.toLowerCase());\n    select.appendChild(option);\n});\nvar inputAge = document.createElement(\"input\");\ninputAge.setAttribute(\"name\", \"age\");\ninputAge.setAttribute(\"type\", \"number\");\ninputAge.setAttribute(\"data-qa\", \"age\");\nvar inputSalary = document.createElement(\"input\");\ninputSalary.setAttribute(\"name\", \"salary\");\ninputSalary.setAttribute(\"type\", \"text\");\ninputSalary.setAttribute(\"data-qa\", \"salary\");\nlabelName.appendChild(inputName);\nlabelPosition.appendChild(inputPosition);\nlabelOffice.appendChild(select);\nlabelAge.appendChild(inputAge);\nlabelSalary.appendChild(inputSalary);\nvar button = document.createElement(\"button\");\nbutton.setAttribute(\"type\", \"submit\");\nbutton.textContent = \"Save to table\";\nform.appendChild(labelName);\nform.appendChild(labelPosition);\nform.appendChild(labelOffice);\nform.appendChild(labelAge);\nform.appendChild(labelSalary);\nform.appendChild(button);\nbody.append(form);\n// creating notifications\nvar pushNotification = function(title, description, type) {\n    var notification = document.createElement(\"div\");\n    var titleEl = document.createElement(\"h2\");\n    var descriptionEl = document.createElement(\"p\");\n    notification.className = \"notification \".concat(type);\n    notification.setAttribute(\"data-qa\", \"notification\");\n    titleEl.className = \"title\";\n    titleEl.textContent = title;\n    descriptionEl.textContent = description;\n    notification.append(titleEl);\n    notification.append(descriptionEl);\n    document.documentElement.append(notification);\n    setTimeout(function() {\n        notification.style.display = \"none\";\n    }, 2000);\n};\n// validation and addition persons\nform.addEventListener(\"submit\", function(e) {\n    e.preventDefault();\n    if (inputName.value.trim().length < 4 || inputPosition.value.trim().length < 4) pushNotification(\"Error!\", \"Name must be at least 4 letters long!\", \"error\");\n    else if (inputAge.value < 18 || inputAge.value > 90) pushNotification(\"Error!\", \"Age must be between 18 and 90!\", \"error\");\n    else {\n        var newRow = document.createElement(\"tr\");\n        var cellName = document.createElement(\"td\");\n        var cellPosition = document.createElement(\"td\");\n        var cellOffice = document.createElement(\"td\");\n        var cellAge = document.createElement(\"td\");\n        var cellSalary = document.createElement(\"td\");\n        cellName.textContent = inputName.value;\n        cellPosition.textContent = inputPosition.value;\n        cellOffice.textContent = select.options[select.selectedIndex].text;\n        cellAge.textContent = inputAge.value;\n        var formattedSalary = new Intl.NumberFormat(\"en-US\", {\n            style: \"currency\",\n            currency: \"USD\",\n            minimumFractionDigits: 0\n        }).format(inputSalary.value);\n        cellSalary.textContent = formattedSalary;\n        newRow.appendChild(cellName);\n        newRow.appendChild(cellPosition);\n        newRow.appendChild(cellOffice);\n        newRow.appendChild(cellAge);\n        newRow.appendChild(cellSalary);\n        tbody.appendChild(newRow);\n        inputName.value = \"\";\n        inputPosition.value = \"\";\n        select.selectedIndex = 0;\n        inputAge.value = \"\";\n        inputSalary.value = \"\";\n        pushNotification(\"Success!\", \"Employee added successfully!\", \"success\");\n    }\n});\n\n//# sourceMappingURL=index.08e3f577.js.map\n","const body = document.querySelector('body');\nconst headers = document.querySelectorAll('thead th');\nconst tbody = document.querySelector('tbody');\nconst rows = [...document.querySelectorAll('tbody tr')];\n\n// sorting table and selecting row\nheaders.forEach((header, index) => {\n  header.addEventListener('click', () => {\n    const order = header.getAttribute('order');\n\n    rows.sort((a, b) => {\n      const cellA = a.children[index].textContent.trim();\n      const cellB = b.children[index].textContent.trim();\n\n      let comparison = 0;\n      const isNumericColumn = index === 4;\n\n      if (isNumericColumn) {\n        const salaryA = parseFloat(cellA.replace(/[^0-9.-]/g, ''));\n        const salaryB = parseFloat(cellB.replace(/[^0-9.-]/g, ''));\n\n        comparison = salaryA - salaryB;\n      } else if (!isNaN(cellA) && !isNaN(cellB)) {\n        comparison = cellA - cellB;\n      } else {\n        comparison = cellA.localeCompare(cellB);\n      }\n\n      if (order === 'asc') {\n        return -comparison;\n      } else {\n        return comparison;\n      }\n    });\n\n    headers.forEach((cell) => cell.removeAttribute('order'));\n    header.setAttribute('order', order === 'asc' ? 'dsc' : 'asc');\n\n    rows.forEach((row) => tbody.appendChild(row));\n  });\n});\n\nrows.forEach((row) => {\n  row.addEventListener('click', () => {\n    if (row.classList.contains('active')) {\n      rows.forEach((item) => {\n        item.classList.remove('active');\n      });\n    } else {\n      rows.forEach((item) => {\n        item.classList.remove('active');\n      });\n      row.classList.add('active');\n    }\n  });\n});\n\n// creating and appending form\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\n\nconst labelName = document.createElement('label');\nconst labelPosition = document.createElement('label');\nconst labelOffice = document.createElement('label');\nconst labelAge = document.createElement('label');\nconst labelSalary = document.createElement('label');\n\nlabelName.textContent = 'Name: ';\nlabelPosition.textContent = 'Position: ';\nlabelOffice.textContent = 'Office: ';\nlabelAge.textContent = 'Age: ';\nlabelSalary.textContent = 'Salary: ';\n\nconst inputName = document.createElement('input');\n\ninputName.setAttribute('name', 'name');\ninputName.setAttribute('type', 'text');\ninputName.setAttribute('data-qa', 'name');\n\nconst inputPosition = document.createElement('input');\n\ninputPosition.setAttribute('name', 'position');\ninputPosition.setAttribute('type', 'text');\ninputPosition.setAttribute('data-qa', 'position');\n\nconst select = document.createElement('select');\n\nselect.setAttribute('data-qa', 'office');\n\nconst selectOptions = [\n  'Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinburgh',\n  'San Francisco',\n];\n\nselectOptions.forEach((optionName) => {\n  const option = document.createElement('option');\n\n  option.textContent = optionName;\n  option.setAttribute('value', optionName.toLowerCase());\n  select.appendChild(option);\n});\n\nconst inputAge = document.createElement('input');\n\ninputAge.setAttribute('name', 'age');\ninputAge.setAttribute('type', 'number');\ninputAge.setAttribute('data-qa', 'age');\n\nconst inputSalary = document.createElement('input');\n\ninputSalary.setAttribute('name', 'salary');\ninputSalary.setAttribute('type', 'text');\ninputSalary.setAttribute('data-qa', 'salary');\n\nlabelName.appendChild(inputName);\nlabelPosition.appendChild(inputPosition);\nlabelOffice.appendChild(select);\nlabelAge.appendChild(inputAge);\nlabelSalary.appendChild(inputSalary);\n\nconst button = document.createElement('button');\n\nbutton.setAttribute('type', 'submit');\nbutton.textContent = 'Save to table';\n\nform.appendChild(labelName);\nform.appendChild(labelPosition);\nform.appendChild(labelOffice);\nform.appendChild(labelAge);\nform.appendChild(labelSalary);\nform.appendChild(button);\n\nbody.append(form);\n\n// creating notifications\nconst pushNotification = (title, description, type) => {\n  const notification = document.createElement('div');\n  const titleEl = document.createElement('h2');\n  const descriptionEl = document.createElement('p');\n\n  notification.className = `notification ${type}`;\n  notification.setAttribute('data-qa', 'notification');\n\n  titleEl.className = 'title';\n  titleEl.textContent = title;\n\n  descriptionEl.textContent = description;\n\n  notification.append(titleEl);\n  notification.append(descriptionEl);\n  document.documentElement.append(notification);\n\n  setTimeout(() => {\n    notification.style.display = 'none';\n  }, 2000);\n};\n\n// validation and addition persons\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  if (\n    inputName.value.trim().length < 4 ||\n    inputPosition.value.trim().length < 4\n  ) {\n    pushNotification(\n      'Error!',\n      'Name must be at least 4 letters long!',\n      'error',\n    );\n  } else if (inputAge.value < 18 || inputAge.value > 90) {\n    pushNotification('Error!', 'Age must be between 18 and 90!', 'error');\n  } else {\n    const newRow = document.createElement('tr');\n    const cellName = document.createElement('td');\n    const cellPosition = document.createElement('td');\n    const cellOffice = document.createElement('td');\n    const cellAge = document.createElement('td');\n    const cellSalary = document.createElement('td');\n\n    cellName.textContent = inputName.value;\n    cellPosition.textContent = inputPosition.value;\n\n    cellOffice.textContent = select.options[select.selectedIndex].text;\n    cellAge.textContent = inputAge.value;\n\n    const formattedSalary = new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n    }).format(inputSalary.value);\n\n    cellSalary.textContent = formattedSalary;\n\n    newRow.appendChild(cellName);\n    newRow.appendChild(cellPosition);\n    newRow.appendChild(cellOffice);\n    newRow.appendChild(cellAge);\n    newRow.appendChild(cellSalary);\n    tbody.appendChild(newRow);\n\n    inputName.value = '';\n    inputPosition.value = '';\n    select.selectedIndex = 0;\n    inputAge.value = '';\n    inputSalary.value = '';\n\n    pushNotification('Success!', 'Employee added successfully!', 'success');\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","body","document","querySelector","headers","querySelectorAll","tbody","rows","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","forEach","header","index","addEventListener","order","getAttribute","sort","a","b","cellA","children","textContent","trim","cellB","comparison","salaryA","parseFloat","replace","isNaN","localeCompare","cell","removeAttribute","setAttribute","row","appendChild","classList","contains","item","remove","add","form","createElement","labelName","labelPosition","labelOffice","labelAge","labelSalary","inputName","inputPosition","select","selectOptions","optionName","option","toLowerCase","inputAge","inputSalary","button","append","pushNotification","title","description","type","notification","titleEl","descriptionEl","className","concat","documentElement","setTimeout","style","display","e","preventDefault","value","newRow","cellName","cellPosition","cellOffice","cellAge","cellSalary","options","selectedIndex","text","formattedSalary","Intl","NumberFormat","currency","minimumFractionDigits","format"],"version":3,"file":"index.08e3f577.js.map"}